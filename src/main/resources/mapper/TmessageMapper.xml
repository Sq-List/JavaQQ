<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zust.server.dao.TmessageMapper">
  <resultMap id="BaseResultMap" type="com.zust.server.entity.Tmessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="send_id" jdbcType="INTEGER" property="sendId" />
    <result column="recive_id" jdbcType="INTEGER" property="reciveId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zust.server.entity.Tmessage">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Base_Column_List">
    id, send_id, recive_id, time
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zust.server.entity.Tmessage">
    insert into message (id, send_id, recive_id, 
      time, message)
    values (#{id,jdbcType=INTEGER}, #{sendId,jdbcType=INTEGER}, #{reciveId,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zust.server.entity.Tmessage">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="reciveId != null">
        recive_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=INTEGER},
      </if>
      <if test="reciveId != null">
        #{reciveId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zust.server.entity.Tmessage">
    update message
    <set>
      <if test="sendId != null">
        send_id = #{sendId,jdbcType=INTEGER},
      </if>
      <if test="reciveId != null">
        recive_id = #{reciveId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zust.server.entity.Tmessage">
    update message
    set send_id = #{sendId,jdbcType=INTEGER},
      recive_id = #{reciveId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zust.server.entity.Tmessage">
    update message
    set send_id = #{sendId,jdbcType=INTEGER},
      recive_id = #{reciveId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>