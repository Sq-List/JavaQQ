<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zust.server.dao.TuserMapper">
  <resultMap id="BaseResultMap" type="com.zust.server.entity.Tuser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar_src" jdbcType="VARCHAR" property="avatarSrc" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_name, user_name, password, avatar_src, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zust.server.entity.Tuser">
    insert into user (id, login_name, user_name, 
      password, avatar_src, status
      )
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{avatarSrc,jdbcType=VARCHAR}, #{status,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zust.server.entity.Tuser">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatarSrc != null">
        avatar_src,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarSrc != null">
        #{avatarSrc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zust.server.entity.Tuser">
    update user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarSrc != null">
        avatar_src = #{avatarSrc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zust.server.entity.Tuser">
    update user
    set login_name = #{loginName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar_src = #{avatarSrc,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			user
		WHERE
			user.login_name = #{loginName}
		AND
			user.password = #{password}
	</select>

	<select id="selectFriendByUser" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			`user`
		WHERE
			`user`.id IN (
					SELECT
						friend.request_user_id
					FROM
						friend
					WHERE
						friend.berequest_user_Id = #{tuser.id}
				UNION
					SELECT
						friend.berequest_user_Id
					FROM
						friend
					WHERE
						friend.request_user_id = #{tuser.id}
			)
			<if test="flag">
				AND
					`user`.status = 1
			</if>
	</select>

	<select id="selectUserByNickName" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			`user`
		WHERE
			`user`.user_name LIKE '%${userName}%'
			AND
			`user`.id != ${id}
		ORDER BY
			`status` DESC
	</select>

    <select id="selectUserById" resultType="com.zust.server.entity.Tuser">
        SELECT * FROM USER WHERE id = #{id};
    </select>

</mapper>
